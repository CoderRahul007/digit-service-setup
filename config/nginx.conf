worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;

    # Gzip Settings
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Health check endpoint
    server {
        listen 80;
        server_name _;
        
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # User Service
        location /user/ {
            include /etc/nginx/proxy_params.conf;
            proxy_pass http://user:8080/user/;
        }

        # Access Control Service
        location /access/ {
            include /etc/nginx/proxy_params.conf;
            proxy_pass http://access-control:8080/access/;
        }

        # MDMS Service
        location /egov-mdms-service/ {
            include /etc/nginx/proxy_params.conf;
            proxy_pass http://mdms-service:8080/egov-mdms-service/;
        }

        # Workflow Service
        location /egov-workflow-v2/ {
            include /etc/nginx/proxy_params.conf;
            proxy_pass http://workflow-v2:8080/egov-workflow-v2/;
        }

        # Billing Service
        location /billing-service/ {
            include /etc/nginx/proxy_params.conf;
            proxy_pass http://billing-service:8080/billing-service/;
        }

        # Collection Services
        location /collection-services/ {
            include /etc/nginx/proxy_params.conf;
            proxy_pass http://collection-services:8080/collection-services/;
        }

        # Notification SMS Service
        location /notification-sms/ {
            include /etc/nginx/proxy_params.conf;
            proxy_pass http://notification-sms:8080/notification-sms/;
        }

        # Filestore Service
        location /filestore/ {
            include /etc/nginx/proxy_params.conf;
            proxy_pass http://filestore:8080/filestore/;
        }

        # ID Generation Service
        location /egov-idgen/ {
            include /etc/nginx/proxy_params.conf;
            proxy_pass http://egov-idgen:8080/egov-idgen/;
        }

        # Custom Permit Service
        location /permit/ {
            include /etc/nginx/proxy_params.conf;
            proxy_pass http://permit-service:8080/permit/;
        }

        # Custom VC Service
        location /vc/ {
            include /etc/nginx/proxy_params.conf;
            proxy_pass http://vc-service:8080/vc/;
        }

        # Default location for API documentation
        location / {
            return 200 '{
                "message": "DIGIT OSS API Gateway",
                "version": "1.0.0",
                "services": {
                    "user": "/user/",
                    "access-control": "/access/",
                    "mdms": "/egov-mdms-service/",
                    "workflow": "/egov-workflow-v2/",
                    "billing": "/billing-service/",
                    "collection": "/collection-services/",
                    "notification-sms": "/notification-sms/",
                    "filestore": "/filestore/",
                    "idgen": "/egov-idgen/",
                    "permit": "/permit/",
                    "vc": "/vc/"
                }
            }';
            add_header Content-Type application/json;
        }

        # Error pages
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}